snippet prg "ProgramName" b 
!	This is file : `!v expand('%:t:r')`
! Author= `!v expand($USER)`
! Started at: `date +%d.%m.%Y`
! Last Modified: Tue 02 Feb 2021 12:10:26 IST
!
Program  ${1:`!v expand('%:t:r')`}
Implicit None
${2:${VISUAL}}
End Program  ${1/([^\n$]+).*/$1/} $0
endsnippet

snippet mod "ModuleName" b 
Module  ${1:`!v expand('%:t:r')`}  !
Implicit None
${2:${VISUAL}}
End Module  ${1/([^\n$]+).*/$1/} $0
endsnippet

snippet sub "Subroutine name" b
Subroutine  ${1:${VISUAL:SubroutineName}}($2)
${3:${VISUAL}}
End Subroutine ${1/([^\n$]+).*/$1/} $0
endsnippet

snippet fun "Function name" b
Function  ${1:${VISUAL:FunctionName}}($2)
${2:${VISUAL}}
End Function ${1/([^\n$]+).*/$1/} $0
endsnippet

snippet proc 
procedure ${1:${VISUAL:ProcedureName}}
${2:${VISUAL}}
end procedure $1
endsnippet

snippet iface 
interface ${1:${VISUAL:InterfaceName}}
${2:${VISUAL}}
end interface $1
endsnippet

snippet if "if block" b
${1:<++name++>}if (${2:<++condition++>}) then
	${3:<++Start++>}
end if ${1/://} $0
endsnippet

snippet case "case block" b
select case (${1:${VISUAL}})
case (${2:${VISUAL}})

case default
${3:}
end select $0
endsnippet

snippet do  "do loop" b
${1:<++name++>}do ${2:<++iter++>} = ${3:<++start++>}, ${4:<++end++>}
${5:<++loop++>}
end do ${1/://} $0
endsnippet

snippet dow  "do while" b
${1:<++name++>}do while (${2:<++condition++>})
${3:<++condition++>}
end do  ${1/://} $0
endsnippet

snippet `wr "Short write" Ab
write(${1:fp},${2:*}) ${3:<++stetement++>}
endsnippet

snippet read  "Read" b
read(${1:<++fp++>}, ${2:*}) ${3:<++statment++>}
endsnippet

snippet write  "write" b
write(unit = ${1:<++fp++>}, file = ${2:<++filename++>}, iostat = ${3:<++ierr++>}) ${4:<++statment++>}
endsnippet

snippet open  "Open file" b
open(unit = ${1:<++fp++>}, file = ${2:<++filename++>}, status = ${3:<++unknown++>}, iostat = ${4:<++ierr++>}) 
endsnippet

snippet close  "close file" b
close(unit = ${1:<++fp++>}) 
endsnippet

snippet `int "integer" Ab
integer($1):: ${2:variables}
endsnippet

snippet `chr  "Character variable" Ab
character(len=$1):: ${2:variables}
endsnippet

snippet `rl "Real variable" Ab
real($1):: ${2:variables}
endsnippet

snippet `dim "Dimension" A
dimension($1)$2
endsnippet

snippet par
parameter$1
endsnippet

snippet `sl "Select kind" A
selected_$1_kind($2)
endsnippet
